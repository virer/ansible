global
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     24000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/run/haproxy.sock

    # utilize system-wide crypto-policies
    ssl-default-bind-ciphers PROFILE=SYSTEM
    ssl-default-server-ciphers PROFILE=SYSTEM

defaults
    mode                    tcp
    log                     global
    option                  dontlognull
    retries                 3
    timeout http-request    5m
    timeout queue           1m
    timeout connect         1s
    timeout client          5m
    timeout server          5m
    timeout http-keep-alive 5m
    timeout check           10s
    maxconn                 23000

listen stats
    bind :9000
    mode http
    stats enable
    stats hide-version
    stats realm Haproxy\ Statistics
    stats uri /haproxy_stats
    stats auth admin:admin

frontend openshift-api
    bind *:6443
    default_backend openshift-api
    mode tcp
    option tcplog

backend openshift-api
    balance source
    mode tcp
{% for item in bootstrapnodes['bootstrapnodes'] %}
    server {{ bootstrapnodes['bootstrapnodes'][item]['name'] }} {{ bootstrapnodes['bootstrapnodes'][item]['ip'] }}:6443 check
{% endfor -%}
{% for item in masternodes['masternodes'] %}
    server {{ masternodes['masternodes'][item]['name'] }} {{ masternodes['masternodes'][item]['ip'] }}:6443 weight 1 verify none check check-ssl inter 3s fall 2 rise 3
{% endfor -%}

#
frontend machine-config-server
    bind *:22623
    default_backend machine-config-server
    mode tcp
    option tcplog

backend machine-config-server
    balance source
    mode tcp
{% for item in bootstrapnodes['bootstrapnodes'] %}
    server {{ bootstrapnodes['bootstrapnodes'][item]['name'] }} {{ bootstrapnodes['bootstrapnodes'][item]['ip'] }}:22623 check
{% endfor -%}
{% for item in masternodes['masternodes'] %}
    server {{ masternodes['masternodes'][item]['name'] }} {{ masternodes['masternodes'][item]['ip'] }}:22623 check
{% endfor -%}


#
frontend ingress-http
    bind *:80
    default_backend ingress-http
    mode tcp
    option tcplog

backend ingress-http
    balance source
    mode tcp
    option httpchk GET /healthz
{% for item in infranodes['infranodes'] %}
    server {{ infranodes['infranodes'][item]['name'] }} {{ infranodes['infranodes'][item]['ip'] }}:80 check port 1936
{% endfor -%}



#
frontend ingress-https
    bind *:443
    default_backend ingress-https
    mode tcp
    option tcplog

backend ingress-https
    balance source
    mode tcp
    option httpchk GET /healthz
{% for item in infranodes['infranodes'] %}
    server {{ infranodes['infranodes'][item]['name'] }} {{ infranodes['infranodes'][item]['ip'] }}:443 check port 1936
{% endfor -%}


# EOF
